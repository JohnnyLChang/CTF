Build(Chip8)							  Build(Chip8)

NAME
	chip8 -	X11 Chip8 interpreter
	Copyright (C) 1990, 1991, 1998,	1999, 2012 Peter Miller

	The Chip8 package is distributed under the terms of the	GNU General
	Public License.	 See the LICENSE section, below, for more details.

SPACE REQUIREMENTS
	You may	need up	to 4MB of disk space to	unpack and build the Chip8
	package.  (This	is the worst case seen so far, most systems have
	binaries about 60% as big as this, 2MB is more typical.)  Your mileage
	may vary.

SITE CONFIGURATION
	The Chip8 package is configured	using the configure shell script
	included in this distribution.

	The configure shell script attempts to guess correct values for
	various	system-dependent variables used	during compilation, and
	creates	the Makefile and common/config.h files.	 It also creates a
	shell script config.status that	you can	run in the future to recreate
	the current configuration.

   Running Configure
	Normally, you just cd to the directory containing Chip8's source code
	and type
		% ./configure
		...lots	of output...
		%
	If you're using	csh on an old version of System	V, you might need to
	type
		% sh configure
		...lots	of output...
		%
	instead	to prevent csh from trying to execute configure	itself.

	Running	configure takes	a minute or two.  While	it is running, it
	prints some messages that tell what it is doing.  If you don't want to
	see the	messages, run configure	with the quiet option; for example,
		% ./configure --quiet
		%

	By default, configure will arrange for the make	install	command	to
	install	the Chip8 package's files in /usr/local/bin, /usr/local/man
	and /usr/local/share/chip8.  There are a number	of options which allow
	you to control the placement of	these files.

	--prefix=PATH
		This specifies the path	prefix to be used in the installation.
		Defaults to /usr/local unless otherwise	specified.

	--exec-prefix=PATH
		You can	specify	separate installation prefixes for
		architecture-specific files and	architecture-independent
		files.	Defaults to ${prefix} unless otherwise specified.

	--bindir=PATH
		This directory contains	executable programs.  On a network,
		this directory may be shared between machines with identical
		hardware and operating systems;	it may be mounted read-only.
		Defaults to ${exec_prefix}/bin unless otherwise	specified.

	--datadir=PATH
		This directory contains	installed data,	such as	the
		documentation, reports and shell scripts distributed with
		Chip8.	On a network, this directory may be shared between all
		machines; it may be mounted read-only.	Defaults to
		${prefix}/share/chip8 unless otherwise specified.  A ``chip8''
		directory will be appended if there is none in the specified
		path.

	--mandir=PATH
		This directory contains	the on-line manual entries.  On	a
		network, this directory	may be shared between all machines; it
		may be mounted read-only.  Defaults to ${prefix}/man unless
		otherwise specified.

	configure ignores any other arguments that you give it.

	On systems that	require	unusual	options	for compilation	or linking
	that the Chip8 package's configure script does not know	about, you can
	give configure initial values for variables by setting them in the
	environment.  In Bourne-compatible shells, you can do that on the
	command	line like this:
		$ CC='gcc -traditional'	LIBS=-lposix ./configure
		...lots	of output...
		$
	Here are the make variables that you might want	to override with
	environment variables when running configure.

	Variable: CC
		C compiler program.  The default is cc.

	Variable: INSTALL
		Program	to use to install files.  The default is install if
		you have it, cp	otherwise.

	Variable: LIBS
		Libraries to link with,	in the form -lfoo -lbar.  The
		configure script will append to	this, rather than replace it.

	If you need to do unusual things to compile the	package, the author
	encourages you to figure out how configure could check whether to do
	them, and mail diffs or	instructions to	the author so that they	can be
	included in the	next release.

BUILDING CHIP8
	All you	should need to do is use the
		% make
		...lots	of output...
		%
	command	and wait.  When	this finishes you should see a directory
	called bin containing three files: chip8as, chip8dis, and chip8run.

	chip8as	The chip8as program is an assembler for	Chip8 programs.

	chip8dis
		The chip8dis program is	a disassembler of Chip8	programs.

	aereport
		The chip8run program is	used run assembled Chip8 programs.

	You can	remove the program binaries and	object files from the source
	directory by using the
		% make clean
		...lots	of output...
		%
	command.  To remove all	of the above files, and	also remove the
	Makefile and common/config.h and config.status files, use the
		% make distclean
		...lots	of output...
		%
	command.

	The file etc/configure.ac is used to create configure by a GNU program
	called autoconf.  You only need	to know	this if	you want to regenerate
	configure using	a newer	version	of autoconf.

TESTING	CHIP8
	The Chip8 package comes	with a test suite.  To run this	test suite,
	use the	command
		% make sure
		...lots	of output...
		Passed All Tests
		%

	The tests take less than a minute each,	but they can vary greatly
	depending on your CPU.

INSTALLING CHIP8
	As explained in	the SITE CONFIGURATION section,	above, the Chip8
	package	is installed under the /usr/local tree by default.  Use	the
	--prefix=PATH option to	configure if you want some other path.

	All that is required to	install	the Chip8 package is to	use the
		% make install
		...lots	of output...
		%
	command.  Control of the directories used may be found in the first
	few lines of the Makefile file if you want to bypass the configure
	script.	 You must also edit the	other files generated by configure; it
	is usually easier to re-run configure with the appropriate arguments.

	The above procedure assumes that the soelim(1) command is somewhere in
	the command search PATH.  The soelim(1)	command	is available as	part
	of the GNU Groff package, mentioned below in the PRINTED MANUALS
	section.  If you don't have it,	but you	do have	the cook package, then
	a link from roffpp to soelim will also work.

PRINTED	MANUALS
	This distribution contains the sources to all of the documentation for
	Chip8, however the simplest way	to get the documentation is by
	anonymous FTP; a PostScript file of the	Reference Manual is available
	from the FTP sites listed in the README	file.  The Reference Manual
	contains the README and	BUILDING files,	as well	as all of the section
	1 and section 5	manual pages.

GETTING	HELP
	If you need assistance with Chip8, please do not hesitate to contact
	the author at
		Peter Miller <pmiller@opensource.org.au>
	Any and	all feedback is	welcome.

	When reporting problems, please	include	the version number given by
	the
		% chip8run -version
		Chip8 version 1.1.D094
		...
		%
	command.  Please run this command to get the exact number, do not send
	the text of this example.

   Runtime Checking
	In the common/main.h file, the is a define of DEBUG in comments.  If
	the comments are removed, extensive debugging is turned	on.  This
	causes some performance	loss, but performs much	run-time checking and
	adds the -TRAce	command	line option.

	When the -TRAce	command	line option is followed	by one or more file
	names, it turns	on execution traces in those source files.  It is
	usually	best to	place this on the end of the command line so that
	names of the files to be traced	are not	confused with other file names
	or strings on the command line.

   Problem Reports
	If you send email to the author, please	include	the following
	information:

	1. The type of UNIX
		The author will	need to	know the brand and version of UNIX you
		are using, or if it is not UNIX	but something else.  The
		output of "uname -sr" is usually sufficient (but not all
		systems	have it).

	2. The Version Number
		In any information you send, please include the	version	number
		reported in the	common/patchlevel.h file, or `chip8run -vers`
		if you can get it to compile.

	3. The Archive Site
		When and where you obtained this version of Chip8.

	4. Unpacking
		Did you	have problems unpacking	Chip8?

	5. Building
		Did you	have problems building Chip8?  This could have been
		the instructions included, it could have been the configure
		script,	it could have been the Makefile, or anything else.

	6. Testing
		Did you	have problems with the tests?  You could have had
		problems running them, or some of them could have failed.  If
		some tests fail	but not	others,	please let me know which ones
		failed,	and include the	fact that Chip8	was not	set-uid-root
		at the time.  The -k option to make can	be useful if some
		tests fail but not others.

	7. Installation
		Did you	have problems installing Chip8?	 This could have been
		the instructions, or anything else.

	At this	point it would probably	be a very good idea to print out the
	manual entries and read	them carefully.	 You will also want to print a
	copy of	the Reference Manual; if you don't gave	GNU Groff, there
	should be a PostScript copy at the archive site.

	8. Using Chip8
		Did you	have problems using Chip8?  This is a whole can	of
		worms.	If possible, include a shell script similar to the
		tests which accompany Chip8, which reproduces the bug.	Exit
		code 1 on failure (bug), exit code 0 on	success	(for when bug
		is fixed).

	9. The Source Code
		Did you	read the code?	Did you	write some code?  If you read
		the code and found problems, fixed them, or extended Chip8,
		these contributions are	most welcome.

	The above list is inclusive, not exclusive.  Any and all feedback is
	greatly	appreciated, as	is the effort and interest required to produce
	it.

LICENSE
	The Chip8 package is free software; you	can redistribute it and/or
	modify it under	the terms of the GNU General Public License as
	published by the Free Software Foundation; either version 2 of the
	License, or (at	your option) any later version.

	The Chip8 package is distributed in the	hope that it will be useful,
	but WITHOUT ANY	WARRANTY; without even the implied warranty of
	MERCHANTABILITY	or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
	General	Public License for more	details.

	It should be in	the LICENSE file included in this distribution.

AUTHOR
	Peter Miller   E-Mail:	 pmiller@opensource.org.au
	/\/\*		  WWW:	 http://miller.emu.id.au/pmiller/

Reference Manual		     Chip8			  Build(Chip8)
