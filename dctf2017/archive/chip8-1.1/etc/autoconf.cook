/*
 * chip8 - X11 Chip8 interpreter
 * Copyright (C) 1998, 2012 Peter Miller
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * This file is generated by autoconf.
 * It is architecture specific.
 * If it is not found (not cooked yet) the following
 * symbols will be undefined.
 *
 *      Must be included *after* the search_list is defined.
 */
#include-cooked-nowarn [arch]/etc/Howto.conf
if [not [defined prefix]] then
    prefix = /usr/local;
if [not [defined exec_prefix]] then
    exec_prefix = [prefix];
if [not [defined yacc]] then
    yacc = yacc;
if [not [defined libs]] then
    libs = ;
if [not [defined ld_flags]] then
    ld_flags = ;
if [not [defined cc]] then
    cc = ['if' [find_command gcc] 'then' gcc 'else' cc];
if [not [defined cc_flags]] then
    cc_flags = -g -O;

/*
 * The configured files are generated using the config.status script
 * output by the configure script.  Not all of them are essential to a
 * build, or are already taken care of, and some are not meaningful.
 */
configured_files =
    [fromto %0%.in [arch]/%0% [match_mask %0%.in [source_files]]];
configured_files =
    [stringset
        [configured_files]
    -
        [arch]/Makefile /* only for integration builds */
        [arch]/etc/Howto.conf /* make cook trigger this itself */
        [arch]/etc/config.h
        [arch]/etc/configure
    ];
configured_files: [configured_files];


configure: etc/configure.ac install-sh
{
    /*
     * unfortunately,
     * install-sh must be in the current directory
     */
    if [not [exists install-sh]] then
        ln -s [resolve install-sh] install-sh
            set clearstat;
    autoconf [resolve etc/configure.ac] > [target];
    chmod 755 [target];
}

/*
 * The install-sh script can come from a huge range of places, depending
 * on what distribution you have installed (or whether you built it from
 * the tarball).
 *
 * Setting the install-sh variable make cook print the intended error
 * message instead of a syntax error when the install-sh script does not
 * exist.
 */
install-sh = ;
loop install-sh-maybe =
    /usr/share/autoconf/install-sh
    [glob /usr/share/automake*/install-sh]
    [glob /usr/local/share/autoconf*/install-sh]
    [glob /usr/local/share/automake*/install-sh]
{
    if [exists [install-sh-maybe]] then
    {
        install-sh = [install-sh-maybe];
        loopstop;
    }
}
if [not [install-sh]] then
    fail "Can't locate the \"install-sh\" script from GNU automake";

install-sh: [install-sh]
{
    cat [need] > [target];
    chmod 755 [target];
}

[arch]/config.status: configure install-sh
{
    if [not [exists install-sh]] then
        ln -s [resolve install-sh] install-sh
            set clearstat;
    ./[resolve configure]
        --srcdir\=.
        --cache-file\=/dev/null
        --verbose
        --no-create
        ;
    mv config.status [arch]/config.status;
    rm -f config.log;
}

common/config.h.in: etc/configure.ac
{
    autoheader [resolve etc/configure.ac] > [target];
}


[arch]/%0%.h: %0%.h.in [arch]/config.status
    single-thread conftest.subs
{
    /* these 2 env vars control what is generated */
    CONFIG_FILES\= CONFIG_HEADERS\=[target]\:[resolve %0%.h.in]
        [resolve [arch]/config.status];
}

[arch]/%0%: %0%.in [arch]/config.status
    single-thread conftest.subs
{
    /* these 2 env vars control what is generated */
    CONFIG_FILES\=[target]\:[resolve %0%.in] CONFIG_HEADERS\=
        [resolve [arch]/config.status];

    /*
     * Make shell scripts and CGI scripts executable.
     */
    if [or [matches %%.cgi %] [matches %%.sh %]] then
        chmod a+rx [target];
}
