!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
can	../solve.py	/^    can = leakoffset(p, 8*21)$/;"	kind:variable	line:53
can	../solve.py	/^    can = struct.unpack("<Q", can)[0]$/;"	kind:variable	line:56
can	../solve.py	/^can = []$/;"	kind:variable	line:7
elf	../solve.py	/^elf = ELF('libc-2.23.so')$/;"	kind:variable	line:6
feed	../solve.py	/^def feed(p, pl):$/;"	kind:function	line:19
feedcanary	../solve.py	/^def feedcanary(p,can):$/;"	kind:function	line:42
gdbattach	../solve.py	/^def gdbattach(p):$/;"	kind:function	line:24
leakoffset	../solve.py	/^def leakoffset(p, off):$/;"	kind:function	line:30
libc	../solve.py	/^    libc = leakoffset(p, 183).strip()$/;"	kind:variable	line:57
libc	../solve.py	/^    libc = libc+"\\0"*(8-len(libc))$/;"	kind:variable	line:58
libcadr	../solve.py	/^    libcadr = struct.unpack("<Q", libc)[0]$/;"	kind:variable	line:59
libcbase	../solve.py	/^    libcbase = libcsys - elf.symbols['system']$/;"	kind:variable	line:63
libcsh	../solve.py	/^    libcsh = libcbase + 0x18CD17$/;"	kind:variable	line:64
libcsys	../solve.py	/^    libcsys = libcadr + 0x24B60$/;"	kind:variable	line:60
poprdi	../solve.py	/^    poprdi = 0x0021102+libcbase$/;"	kind:variable	line:66
retlibc	../solve.py	/^def retlibc(p, can, libcsys, sh, pop):$/;"	kind:function	line:37
reviewfood	../solve.py	/^def reviewfood(p, pl=''):$/;"	kind:function	line:8
solve.py	../solve.py	1;"	kind:file	line:1
